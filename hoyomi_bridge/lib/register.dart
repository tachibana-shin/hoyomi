// GENERATED CODE - DO NOT MODIFY BY HAND

import 'export.dart';
import 'package:dart_eval/dart_eval.dart';
void registerEvalDeclarations(Compiler compiler) {
  compiler.defineBridgeClass($EigaFollow.$declaration);
  compiler.defineBridgeClass($EigaCarouselItem.$declaration);
  compiler.defineBridgeClass($EigaContext.$declaration);
  compiler.defineBridgeClass($Subtitle.$declaration);
  compiler.defineBridgeClass($Season.$declaration);
  compiler.defineBridgeClass($MetaEiga.$declaration);
  compiler.defineBridgeClass($EigaCarousel.$declaration);
  compiler.defineBridgeClass($SourceVideo.$declaration);
  compiler.defineBridgeClass($WatchTimeData.$declaration);
  compiler.defineBridgeClass($HomeEigaCategory.$declaration);
  compiler.defineBridgeClass($Eiga.$declaration);
  compiler.defineBridgeClass($DurationRange.$declaration);
  compiler.defineBridgeClass($OpeningEnding.$declaration);
  compiler.defineBridgeClass($EigaContextWithEpisodes.$declaration);
  compiler.defineBridgeClass($EigaCategory.$declaration);
  compiler.defineBridgeClass($WatchTimeUpdated.$declaration);
  compiler.defineBridgeClass($EigaHome.$declaration);
  compiler.defineBridgeClass($SourceContent.$declaration);
  compiler.defineBridgeClass($EigaHistory.$declaration);
  compiler.defineBridgeClass($EigaParam.$declaration);
  compiler.defineBridgeClass($ServerSource.$declaration);
  compiler.defineBridgeClass($EigaSourceContext.$declaration);
  compiler.defineBridgeClass($EigaEpisode.$declaration);
  compiler.defineBridgeClass($EigaEpisodes.$declaration);
  compiler.defineBridgeClass($WatchTime.$declaration);
  compiler.defineBridgeClass($ABEigaService.$declaration);
  compiler.defineBridgeClass($ABComicService.$declaration);
  compiler.defineBridgeClass($ComicHistory.$declaration);
  compiler.defineBridgeClass($HomeComicCategory.$declaration);
  compiler.defineBridgeClass($WatchPageUpdated.$declaration);
  compiler.defineBridgeClass($ComicComment.$declaration);
  compiler.defineBridgeClass($ComicComments.$declaration);
  compiler.defineBridgeClass($ComicParam.$declaration);
  compiler.defineBridgeClass($ComicCarousel.$declaration);
  compiler.defineBridgeClass($Comic.$declaration);
  compiler.defineBridgeClass($ComicFollow.$declaration);
  compiler.defineBridgeClass($ComicCarouselItem.$declaration);
  compiler.defineBridgeClass($ComicHome.$declaration);
  compiler.defineBridgeClass($RateValue.$declaration);
  compiler.defineBridgeClass($WatchPage.$declaration);
  compiler.defineBridgeClass($ComicCategory.$declaration);
  compiler.defineBridgeClass($MetaComic.$declaration);
  compiler.defineBridgeClass($ComicChapter.$declaration);
  compiler.defineBridgeClass($UserNotFoundException.$declaration);
  compiler.defineBridgeClass($ServiceInit.$declaration);
  compiler.defineBridgeClass($BaseService.$declaration);
  compiler.defineBridgeClass($Genre.$declaration);
  compiler.defineBridgeClass($Headers.$declaration);
  compiler.defineBridgeClass($User.$declaration);
  compiler.defineBridgeClass($UrlSearchParams.$declaration);
  compiler.defineBridgeClass($SettingField.$declaration);
  compiler.defineBridgeClass($FieldInput.$declaration);
  compiler.defineBridgeClass($Vtt.$declaration);
  compiler.defineBridgeClass($OImage.$declaration);
  compiler.defineBridgeClass($Filter.$declaration);
  compiler.defineBridgeClass($WebRule.$declaration);
  compiler.defineBridgeClass($Paginate.$declaration);
  compiler.defineBridgeClass($Option.$declaration);
  compiler.defineBridgeClass($Bridger.$declaration);
  compiler.defineBridgeClass($DQuery.$declaration);
  compiler.defineBridgeClass($DateFormat.$declaration);
  compiler.defineBridgeClass($TimeUtils.$declaration);
}

void registerEvalConstructors(Runtime runtime) {
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_follow.dart', 'EigaFollow.', $EigaFollow.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_carousel_item.dart', 'EigaCarouselItem.', $EigaCarouselItem.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_context.dart', 'EigaContext.', $EigaContext.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/subtitle.dart', 'Subtitle.', $Subtitle.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/meta_eiga.dart', 'Season.', $Season.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/meta_eiga.dart', 'MetaEiga.', $MetaEiga.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_carousel.dart', 'EigaCarousel.', $EigaCarousel.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/source_video.dart', 'SourceVideo.', $SourceVideo.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/watch_time_data.dart', 'WatchTimeData.', $WatchTimeData.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/home_eiga_category.dart', 'HomeEigaCategory.', $HomeEigaCategory.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga.dart', 'Eiga.', $Eiga.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/opening_ending.dart', 'DurationRange.', $DurationRange.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/opening_ending.dart', 'OpeningEnding.', $OpeningEnding.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_context_with_episodes.dart', 'EigaContextWithEpisodes.', $EigaContextWithEpisodes.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_category.dart', 'EigaCategory.', $EigaCategory.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/watch_time_updated.dart', 'WatchTimeUpdated.', $WatchTimeUpdated.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_home.dart', 'EigaHome.', $EigaHome.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/source_content.dart', 'SourceContent.', $SourceContent.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_history.dart', 'EigaHistory.', $EigaHistory.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_param.dart', 'EigaParam.', $EigaParam.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/server_source.dart', 'ServerSource.', $ServerSource.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_source_context.dart', 'EigaSourceContext.', $EigaSourceContext.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_episode.dart', 'EigaEpisode.', $EigaEpisode.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/eiga_episodes.dart', 'EigaEpisodes.', $EigaEpisodes.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/eiga/interfaces/watch_time.dart', 'WatchTime.', $WatchTime.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/comic_history.dart', 'ComicHistory.', $ComicHistory.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/home_comic_category.dart', 'HomeComicCategory.', $HomeComicCategory.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/watch_page_updated.dart', 'WatchPageUpdated.', $WatchPageUpdated.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/comic_comment.dart', 'ComicComment.', $ComicComment.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/comic_comments.dart', 'ComicComments.', $ComicComments.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/comic_param.dart', 'ComicParam.', $ComicParam.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/comic_carousel.dart', 'ComicCarousel.', $ComicCarousel.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/comic.dart', 'Comic.', $Comic.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/comic_follow.dart', 'ComicFollow.', $ComicFollow.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/comic_carousel_item.dart', 'ComicCarouselItem.', $ComicCarouselItem.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/comic_home.dart', 'ComicHome.', $ComicHome.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/rate_value.dart', 'RateValue.', $RateValue.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/watch_page.dart', 'WatchPage.', $WatchPage.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/comic_category.dart', 'ComicCategory.', $ComicCategory.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/meta_comic.dart', 'MetaComic.', $MetaComic.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/comic/interfaces/comic_chapter.dart', 'ComicChapter.', $ComicChapter.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/exception/user_not_found_exception.dart', 'UserNotFoundException.', $UserNotFoundException.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/genre.dart', 'Genre.', $Genre.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/headers.dart', 'Headers.', $Headers.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/user.dart', 'User.', $User.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/url_search_params.dart', 'UrlSearchParams.', $UrlSearchParams.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/setting/setting_field.dart', 'SettingField.', $SettingField.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/setting/field_input.dart', 'FieldInput.', $FieldInput.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/vtt.dart', 'Vtt.', $Vtt.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/o_image.dart', 'OImage.', $OImage.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/filter.dart', 'Filter.', $Filter.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/web_rule.dart', 'WebRule.', $WebRule.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/paginate.dart', 'Paginate.', $Paginate.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/core_services/shared/a_option.dart', 'Option.', $Option.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/utils/d_query.dart', 'DQuery.', $DQuery.$new);
  runtime.registerBridgeFunc('package:hoyomi_bridge/utils/date_format.dart', 'DateFormat.', $DateFormat.$new);
}
