// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/http/http.dart';
import 'api/http/utils/socket_addr.dart';
import 'api/image/auto_trim_image.dart';
import 'api/image/decode_image_rgba.dart';
import 'api/image/get_image_size.dart';
import 'api/image/unscramble_image.dart';
import 'api/image/unscramble_image_columns.dart';
import 'api/image/unscramble_image_rows.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'lib.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_ArcFnStringDartFnFutureVecStringPtr =>
      wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSyncPtr;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  ArcFnStringDartFnFutureVecString
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    dynamic raw,
  );

  @protected
  Duration dco_decode_Chrono_Duration(dynamic raw);

  @protected
  ArcFnStringDartFnFutureVecString
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    dynamic raw,
  );

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  SocketAddrDigester dco_decode_TraitDef_SocketAddrDigester(dynamic raw);

  @protected
  Block dco_decode_block(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  ArcFnStringDartFnFutureVecString
  dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    dynamic raw,
  );

  @protected
  Duration dco_decode_box_autoadd_Chrono_Duration(dynamic raw);

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw);

  @protected
  DnsSettings dco_decode_box_autoadd_dns_settings(dynamic raw);

  @protected
  Emulation dco_decode_box_autoadd_emulation(dynamic raw);

  @protected
  HttpVersionPref dco_decode_box_autoadd_http_version_pref(dynamic raw);

  @protected
  ProxySettings dco_decode_box_autoadd_proxy_settings(dynamic raw);

  @protected
  RedirectSettings dco_decode_box_autoadd_redirect_settings(dynamic raw);

  @protected
  RustHttpRequest dco_decode_box_autoadd_rust_http_request(dynamic raw);

  @protected
  TimeoutSettings dco_decode_box_autoadd_timeout_settings(dynamic raw);

  @protected
  TlsSettings dco_decode_box_autoadd_tls_settings(dynamic raw);

  @protected
  TlsVersion dco_decode_box_autoadd_tls_version(dynamic raw);

  @protected
  ColumnBlock dco_decode_column_block(dynamic raw);

  @protected
  CustomProxy dco_decode_custom_proxy(dynamic raw);

  @protected
  DecodedImage dco_decode_decoded_image(dynamic raw);

  @protected
  DnsSettings dco_decode_dns_settings(dynamic raw);

  @protected
  Emulation dco_decode_emulation(dynamic raw);

  @protected
  HttpVersionPref dco_decode_http_version_pref(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<Block> dco_decode_list_block(dynamic raw);

  @protected
  List<ColumnBlock> dco_decode_list_column_block(dynamic raw);

  @protected
  List<CustomProxy> dco_decode_list_custom_proxy(dynamic raw);

  @protected
  List<Uint8List> dco_decode_list_list_prim_u_8_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, List<String>)> dco_decode_list_record_string_list_string(
    dynamic raw,
  );

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  List<RowBlock> dco_decode_list_row_block(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  ArcFnStringDartFnFutureVecString?
  dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    dynamic raw,
  );

  @protected
  Duration? dco_decode_opt_box_autoadd_Chrono_Duration(dynamic raw);

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw);

  @protected
  DnsSettings? dco_decode_opt_box_autoadd_dns_settings(dynamic raw);

  @protected
  Emulation? dco_decode_opt_box_autoadd_emulation(dynamic raw);

  @protected
  HttpVersionPref? dco_decode_opt_box_autoadd_http_version_pref(dynamic raw);

  @protected
  ProxySettings? dco_decode_opt_box_autoadd_proxy_settings(dynamic raw);

  @protected
  RedirectSettings? dco_decode_opt_box_autoadd_redirect_settings(dynamic raw);

  @protected
  TimeoutSettings? dco_decode_opt_box_autoadd_timeout_settings(dynamic raw);

  @protected
  TlsSettings? dco_decode_opt_box_autoadd_tls_settings(dynamic raw);

  @protected
  TlsVersion? dco_decode_opt_box_autoadd_tls_version(dynamic raw);

  @protected
  Uint8List? dco_decode_opt_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, List<String>)>? dco_decode_opt_list_record_string_list_string(
    dynamic raw,
  );

  @protected
  List<(String, String)>? dco_decode_opt_list_record_string_string(dynamic raw);

  @protected
  ProxyCondition dco_decode_proxy_condition(dynamic raw);

  @protected
  ProxySettings dco_decode_proxy_settings(dynamic raw);

  @protected
  (String, List<String>) dco_decode_record_string_list_string(dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  (int, int) dco_decode_record_u_32_u_32(dynamic raw);

  @protected
  RedirectSettings dco_decode_redirect_settings(dynamic raw);

  @protected
  RowBlock dco_decode_row_block(dynamic raw);

  @protected
  RustHttpRequest dco_decode_rust_http_request(dynamic raw);

  @protected
  RustHttpResponse dco_decode_rust_http_response(dynamic raw);

  @protected
  TimeoutSettings dco_decode_timeout_settings(dynamic raw);

  @protected
  TlsSettings dco_decode_tls_settings(dynamic raw);

  @protected
  TlsVersion dco_decode_tls_version(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  BigInt dco_decode_usize(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  ArcFnStringDartFnFutureVecString
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    SseDeserializer deserializer,
  );

  @protected
  Duration sse_decode_Chrono_Duration(SseDeserializer deserializer);

  @protected
  ArcFnStringDartFnFutureVecString
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    SseDeserializer deserializer,
  );

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  Block sse_decode_block(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  ArcFnStringDartFnFutureVecString
  sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    SseDeserializer deserializer,
  );

  @protected
  Duration sse_decode_box_autoadd_Chrono_Duration(SseDeserializer deserializer);

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  DnsSettings sse_decode_box_autoadd_dns_settings(SseDeserializer deserializer);

  @protected
  Emulation sse_decode_box_autoadd_emulation(SseDeserializer deserializer);

  @protected
  HttpVersionPref sse_decode_box_autoadd_http_version_pref(
    SseDeserializer deserializer,
  );

  @protected
  ProxySettings sse_decode_box_autoadd_proxy_settings(
    SseDeserializer deserializer,
  );

  @protected
  RedirectSettings sse_decode_box_autoadd_redirect_settings(
    SseDeserializer deserializer,
  );

  @protected
  RustHttpRequest sse_decode_box_autoadd_rust_http_request(
    SseDeserializer deserializer,
  );

  @protected
  TimeoutSettings sse_decode_box_autoadd_timeout_settings(
    SseDeserializer deserializer,
  );

  @protected
  TlsSettings sse_decode_box_autoadd_tls_settings(SseDeserializer deserializer);

  @protected
  TlsVersion sse_decode_box_autoadd_tls_version(SseDeserializer deserializer);

  @protected
  ColumnBlock sse_decode_column_block(SseDeserializer deserializer);

  @protected
  CustomProxy sse_decode_custom_proxy(SseDeserializer deserializer);

  @protected
  DecodedImage sse_decode_decoded_image(SseDeserializer deserializer);

  @protected
  DnsSettings sse_decode_dns_settings(SseDeserializer deserializer);

  @protected
  Emulation sse_decode_emulation(SseDeserializer deserializer);

  @protected
  HttpVersionPref sse_decode_http_version_pref(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<Block> sse_decode_list_block(SseDeserializer deserializer);

  @protected
  List<ColumnBlock> sse_decode_list_column_block(SseDeserializer deserializer);

  @protected
  List<CustomProxy> sse_decode_list_custom_proxy(SseDeserializer deserializer);

  @protected
  List<Uint8List> sse_decode_list_list_prim_u_8_strict(
    SseDeserializer deserializer,
  );

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, List<String>)> sse_decode_list_record_string_list_string(
    SseDeserializer deserializer,
  );

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
    SseDeserializer deserializer,
  );

  @protected
  List<RowBlock> sse_decode_list_row_block(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  ArcFnStringDartFnFutureVecString?
  sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    SseDeserializer deserializer,
  );

  @protected
  Duration? sse_decode_opt_box_autoadd_Chrono_Duration(
    SseDeserializer deserializer,
  );

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  DnsSettings? sse_decode_opt_box_autoadd_dns_settings(
    SseDeserializer deserializer,
  );

  @protected
  Emulation? sse_decode_opt_box_autoadd_emulation(SseDeserializer deserializer);

  @protected
  HttpVersionPref? sse_decode_opt_box_autoadd_http_version_pref(
    SseDeserializer deserializer,
  );

  @protected
  ProxySettings? sse_decode_opt_box_autoadd_proxy_settings(
    SseDeserializer deserializer,
  );

  @protected
  RedirectSettings? sse_decode_opt_box_autoadd_redirect_settings(
    SseDeserializer deserializer,
  );

  @protected
  TimeoutSettings? sse_decode_opt_box_autoadd_timeout_settings(
    SseDeserializer deserializer,
  );

  @protected
  TlsSettings? sse_decode_opt_box_autoadd_tls_settings(
    SseDeserializer deserializer,
  );

  @protected
  TlsVersion? sse_decode_opt_box_autoadd_tls_version(
    SseDeserializer deserializer,
  );

  @protected
  Uint8List? sse_decode_opt_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, List<String>)>? sse_decode_opt_list_record_string_list_string(
    SseDeserializer deserializer,
  );

  @protected
  List<(String, String)>? sse_decode_opt_list_record_string_string(
    SseDeserializer deserializer,
  );

  @protected
  ProxyCondition sse_decode_proxy_condition(SseDeserializer deserializer);

  @protected
  ProxySettings sse_decode_proxy_settings(SseDeserializer deserializer);

  @protected
  (String, List<String>) sse_decode_record_string_list_string(
    SseDeserializer deserializer,
  );

  @protected
  (String, String) sse_decode_record_string_string(
    SseDeserializer deserializer,
  );

  @protected
  (int, int) sse_decode_record_u_32_u_32(SseDeserializer deserializer);

  @protected
  RedirectSettings sse_decode_redirect_settings(SseDeserializer deserializer);

  @protected
  RowBlock sse_decode_row_block(SseDeserializer deserializer);

  @protected
  RustHttpRequest sse_decode_rust_http_request(SseDeserializer deserializer);

  @protected
  RustHttpResponse sse_decode_rust_http_response(SseDeserializer deserializer);

  @protected
  TimeoutSettings sse_decode_timeout_settings(SseDeserializer deserializer);

  @protected
  TlsSettings sse_decode_tls_settings(SseDeserializer deserializer);

  @protected
  TlsVersion sse_decode_tls_version(SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
    AnyhowException self,
    SseSerializer serializer,
  );

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    ArcFnStringDartFnFutureVecString self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_Chrono_Duration(Duration self, SseSerializer serializer);

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    ArcFnStringDartFnFutureVecString self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_block(Block self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void
  sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    ArcFnStringDartFnFutureVecString self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_Chrono_Duration(
    Duration self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dns_settings(
    DnsSettings self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_emulation(
    Emulation self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_http_version_pref(
    HttpVersionPref self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_proxy_settings(
    ProxySettings self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_redirect_settings(
    RedirectSettings self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_rust_http_request(
    RustHttpRequest self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_timeout_settings(
    TimeoutSettings self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_tls_settings(
    TlsSettings self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_tls_version(
    TlsVersion self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_column_block(ColumnBlock self, SseSerializer serializer);

  @protected
  void sse_encode_custom_proxy(CustomProxy self, SseSerializer serializer);

  @protected
  void sse_encode_decoded_image(DecodedImage self, SseSerializer serializer);

  @protected
  void sse_encode_dns_settings(DnsSettings self, SseSerializer serializer);

  @protected
  void sse_encode_emulation(Emulation self, SseSerializer serializer);

  @protected
  void sse_encode_http_version_pref(
    HttpVersionPref self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_block(List<Block> self, SseSerializer serializer);

  @protected
  void sse_encode_list_column_block(
    List<ColumnBlock> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_custom_proxy(
    List<CustomProxy> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_list_prim_u_8_strict(
    List<Uint8List> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
    Uint8List self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_record_string_list_string(
    List<(String, List<String>)> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_record_string_string(
    List<(String, String)> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_row_block(List<RowBlock> self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void
  sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    ArcFnStringDartFnFutureVecString? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_Chrono_Duration(
    Duration? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_dns_settings(
    DnsSettings? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_emulation(
    Emulation? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_http_version_pref(
    HttpVersionPref? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_proxy_settings(
    ProxySettings? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_redirect_settings(
    RedirectSettings? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_timeout_settings(
    TimeoutSettings? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_tls_settings(
    TlsSettings? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_box_autoadd_tls_version(
    TlsVersion? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_list_prim_u_8_strict(
    Uint8List? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_list_record_string_list_string(
    List<(String, List<String>)>? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_list_record_string_string(
    List<(String, String)>? self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_proxy_condition(
    ProxyCondition self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_proxy_settings(ProxySettings self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_list_string(
    (String, List<String>) self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_record_string_string(
    (String, String) self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_record_u_32_u_32((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_redirect_settings(
    RedirectSettings self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_row_block(RowBlock self, SseSerializer serializer);

  @protected
  void sse_encode_rust_http_request(
    RustHttpRequest self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_rust_http_response(
    RustHttpResponse self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_timeout_settings(
    TimeoutSettings self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_tls_settings(TlsSettings self, SseSerializer serializer);

  @protected
  void sse_encode_tls_version(TlsVersion self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
  _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
    : _lookup = dynamicLibrary.lookup;

  void
  rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
        'frbgen_hoyomi_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync',
      );
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
  rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
        'frbgen_hoyomi_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync',
      );
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynFnStringDartFnFutureVecStringstaticSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();
}
