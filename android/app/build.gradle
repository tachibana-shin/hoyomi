plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "git.shin.hoyomi"
    compileSdk = flutter.compileSdkVersion
    // ndkVersion = flutter.ndkVersion
	ndkVersion = "25.1.8937393"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_18
        targetCompatibility = JavaVersion.VERSION_18
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_18
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "git.shin.hoyomi"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23 // flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
		multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
	
	dependencies {
		implementation 'com.android.support:multidex:2.0.1'
	}
}

allprojects {
  repositories {
    google()
    mavenCentral()
  }
}

rootProject.buildDir = "../build"
subprojects {
  //  fix for verifyReleaseResources
  // ============
  afterEvaluate { project ->
    if (project.plugins.hasPlugin("com.android.application") ||
      project.plugins.hasPlugin("com.android.library")) {
      project.android {
        compileSdkVersion 34
        buildToolsVersion "34.0.0"
      }
    }
    if (project.hasProperty("android")) {
      project.android {
        if (namespace == null) {
          namespace project.group
        }
      }
    }
  }
  // ============
  project.buildDir = "${rootProject.buildDir}/${project.name}"
  project.evaluationDependsOn(":app")
}

tasks.register("clean", Delete) {
  delete rootProject.buildDir
}

flutter {
    source = "../.."
}
